Program -> Expr ";" Program
         | ε

Expr -> Let_expr
      | Fun_expr
      | Lambda_expr
      | If_then_expr
      | Application_expr
      | Logical_expr

Let_expr -> "let" ID "=" Expr "in"  Expr

Fun_expr -> "fun" ID "with" ID_list "=" Expr "in" Expr

Lambda_expr -> "lambda" ID_list "." Expr

If_then_expr -> "if" Expr "then" Expr "else" Expr

Application_expr -> "[" Expr Expr_list "]"

Logical_expr -> Or_expr

Or_expr -> And_expr Or_expr_r

Or_expr_rhs -> "or" And_expr Or_expr_rhs
             | ε

And_expr -> Not_expr And_expr_rhs

And_expr_rhs -> "and"  Not_expr And_expr_rhs
              | ε

Not_expr -> Comp_expr Not_expr_rhs

Not_expr_rhs -> "not" Comp_expr Not_expr_rhs
              | ε

Comp_expr -> Arith_expr Comp_expr_rhs

Comp_expr_rhs -> "==" Arith_expr Comp_expr_rhs
               | "!=" Arith_expr Comp_expr_rhs
               | ">"  Arith_expr Comp_expr_rhs
               | ">=" Arith_expr Comp_expr_rhs
               | "<"  Arith_expr Comp_expr_rhs
               | "<=" Comp_exprArith_expromp_expr_rhs
               | ε

Arith_expr -> Term_expr Arith_expr_rhs

Arith_expr_rhs -> "+" Term_expr Arith_expr_rhs
                | "-" Term_expr Arith_expr_rhs
                | ε

Term_expr -> Factor_expr Term_expr_rhs

Term_expr_rhs -> "*"  Factor_expr Term_expr_rhs
               | "/"  Factor_expr Term_expr_rhs
               | "//" Factor_expr Term_expr_rhs
               | "%"  Factor_expr Term_expr_rhs
               | ε

Factor_expr -> Power_expr Factor_expr_rhs

Factor_expr_rhs -> "**" Power_expr Factor_expr_rhs
          	     | ε

Power_expr -> Nil_expr Power_expr_rhs

Power_expr_rhs -> "**" Power_expr_rhs
          	    | ε

Nil_expr -> List_expr Nil_expr_rhs

Nil_expr_rhs -> "nil" List_expr Nil_expr_rhs
          	  | ε

List_expr -> List_access_expr List_expr_rhs

List_expr_rhs -> "|" List_access_expr List_expr_rhs
		       | ε

List_access_expr -> Atom_expr List_expr_rhs

List_access_expr_rhs -> "#" List_access_expr List_expr_rhs
			 		  | "!" List_access_expr List_expr_rhs
          	 		  | ε

Atom_expr -> "(" Expr_list ")"
      	   | String_concat
           | NUMBER
           | ID

Expr_list -> Expr Expr_list_rhs

Expr_list_rhs -> Expr Expr_list_rhs
			 | ε

ID_list -> ID ID_list_rhs

ID_list_rhs _> "," ID_list_rhs
          	| ε

String_concat -> STRING String_concat_rhs

String_concat_rhs -> STRING String_concat_rhs
                 | ε

ID -> [a-zA-Z_$]+[a-zA-Z0-9_$]*

COMMENT -> #1(#+|\n)

STRING -> \"[^\"\n]*\"

NUMBER -> INTEGER
        | REAL
        | COMPLEX

INTEGER -> ([1-9]+[0-9]*|0+)

REAL -> [INTEGER] "." INTEGER

COMPLEX -> REAL "j"

OPERATOR -> "+"
          | "-"
          | "%"
          | "*"
          | "**"
          | "/"
          | "//"
          | "@"
          | "&"
          | "|"
          | "<"
          | ">"
          | ">="
          | "<="
          | "="
          | "=="
          | "!="
          | "not"
          | "and"
          | "or"
          | "xor"
          | "nil"

KEYWORD ->  "if"
          | "then"
          | "else"
          | "with"
          | "lambda"
          | "with"
          | "fun"
          | "cout"
          | "cin"

SEPARATORS -> ","
            | "."
            | "{"
            | "}"
            | "("
            | ")"
            | "["
            | "]"
            | "..."
            | ";"